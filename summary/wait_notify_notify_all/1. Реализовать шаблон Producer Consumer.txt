Producer — Сonsumer
https://medium.com/datapy-ai/producer-consumer-pattern-c9605f73d004
Producer — consumer - одна из классических проблем синхронизации. Также она относится к проблеме ограниченного буффера.

Это паттерн, с помощью которого решается проблема синхронизации потоков-производителей и потребителей.

Проблема производитель — потребитель состоит из двух процессов, а именно: производитель и потребитель.
Как видно из названия процессов, процесс-производитель производит сущность, а процесс-потребитель потребляет ту же самую сущность.
Проблема говорит о синхронизации этих двух процессов, и поэтому многие называют эту проблему/паттерн классическим примером
проблемы синхронизации нескольких процессов.

Представьте себе, что существует общее пространство хранения, разделяемое одним производителем и одним потребителем процесса.
Производитель производит объект и хранит его в общем пространстве, а потребитель потребляет/удаляет из того же общего пространства.
Процесс-потребитель не должен пытаться удалить объект из общего пространства, когда он пуст, и ждать, п
ока процесс-производитель создаст и сохранит объект в общем пространстве.
Точно так же процесс-производитель не должен производить и сохранять в общем пространстве,
когда пространство полностью заполнено (нет свободного места), и ждать, пока процесс-потребитель удалит объект.
Следовательно, оба процесса должны быть синхронизированы друг с другом и должны знать, когда нужно,
а когда нет производить и удалять объект из общего пространства.

notify() или signal() используются, чтобы сообщить другому потоку, что текущий поток выполнил работу, и он может продолжить свое выполнение.
